syntax = "proto3";

package server;

import "github.com/kralicky/codegen/cli/cli.proto";
import "github.com/kralicky/protoconfig/apis/core/v1/core.proto";

option go_package      = "github.com/kralicky/protoconfig/server";
option (cli.generator) = {
  enabled:                         true,
  generate_flags_for_all_messages: true,
};

enum Target {
  Active  = 0;
  Default = 1;
}

enum Action {
  NoAction = 0;
  Set      = 1;
  Reset    = 2;
}

// Get request options. See also: [pkg/storage.GetOptions]
message GetRequest {
  // If set, will return the config at the specified revision instead of
  // the current config.
  // This revision value can be obtained from the revision field of a
  // typed Get/GetDefault response, or from one of
  // the history entries in a typed History response.
  core.Revision revision = 1 [(cli.flag_set).no_prefix = true];
}

// History request options. See also: [pkg/storage.HistoryOptions]
message HistoryRequest {
  // The configuration type to return history for.
  server.Target target = 1;
  // The latest modification revision to include in the returned history.
  core.Revision revision = 2 [(cli.flag_set).no_prefix = true];
  // If set, will include the values of the configuration in the response.
  // Otherwise, only the revision field of each entry will be populated.
  bool includeValues = 3 [(cli.flag).default = "true"];
}
